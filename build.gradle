import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'com.enonic.xp.app' version '2.0.0'
    id 'com.moowork.node' version '1.2.0'
}

app {
    name = "${appName}"
    displayName = "${appDisplayName}"
    systemVersion = "${xpVersion}"
    vendorName = 'Enonic AS'
    vendorUrl = 'http://enonic.com'
}

dependencies {
    // XP libraries
    compile "com.enonic.xp:core-api:${xpVersion}"
    compile "com.enonic.xp:portal-api:${xpVersion}"
    include "com.enonic.xp:lib-node:${xpVersion}"
    include "com.enonic.xp:lib-content:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
    include "com.enonic.xp:lib-i18n:${xpVersion}"
    include "com.enonic.xp:lib-common:${xpVersion}"

    // Other Libraries
    include "com.enonic.lib:lib-cache:2.1.1"
    include "com.enonic.lib:lib-thymeleaf:2.0.0"
    include 'com.enonic.lib:lib-router:2.1.0'
}

repositories {
    mavenLocal()
    jcenter()
    xp.enonicRepo()
    maven {
        url 'https://repo.enonic.com/public'
    }
}

// Set the gradle version used to build the gradlew wrapper
wrapper {
    gradleVersion = '6.6.1'
}

// Folders & files that should NOT be included in the build
sourceSets {
    main {
        resources {
            exclude '**/scss'
            exclude '**/assets/plugins'
            exclude '**/react/*'
            exclude '**/polyfills/*'
            exclude '**/*.test.js'
            exclude '**/*.ts'
        }
    }
}

// Transpile serverside typescript to ES5 and output to the build directory
task transpileTypescript( type:Exec ) {
    inputs.dir("src/main/resources/admin")
    inputs.dir("src/main/resources/lib")
    inputs.dir("src/main/resources/services")
    inputs.dir("src/main/resources/site")

    outputs.dir "build/resources/main"

    if(Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine 'cmd', '/c', 'yarn', 'tsc:server'
    } else {
        commandLine 'yarn', 'tsc:server'
    }
}

jar.dependsOn transpileTypescript
